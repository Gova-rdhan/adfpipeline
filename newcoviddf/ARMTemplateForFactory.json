{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "newcoviddf"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"LS_GEN2_SOURCE_EXCEL_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_GEN2_SOURCE_EXCEL'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"ds_avf_destination_tables_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ds_avf_destination_tables'"
		},
		"ds_gen2_newfile_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ds_gen2_newfile'"
		},
		"ls_Avf_sampledb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_Avf_sampledb'"
		},
		"ls_avf_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_avf'"
		},
		"ls_blob_dest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_dest'"
		},
		"ls_datalake_raw_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake_raw'"
		},
		"ls_datalake_samplefile_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake_samplefile'"
		},
		"ls_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_gen2'"
		},
		"ls_gen2_raw_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_gen2_raw'"
		},
		"ls_gen2_simplefile_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_gen2_simplefile'"
		},
		"ls_sampledb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sampledb'"
		},
		"ls_sampledb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sampledb1'"
		},
		"ls_sqlserver_coviddb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqlserver_coviddb'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"LS_GEN2_SOURCE_EXCEL_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"ds_gen2_newfile_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"ls_datalake_raw_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"ls_datalake_samplefile_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"ls_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"ls_gen2_raw_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		},
		"ls_gen2_simplefile_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcedatalakeecdc.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/incremental_load_using_copy_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from ags.loadstdtec where isactive = 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_loadstdtec",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item().query",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sample",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sql_dest",
											"type": "DatasetReference",
											"parameters": {
												"tbname": {
													"value": "@item().destinationtable",
													"type": "Expression"
												},
												"schema": "ags"
											}
										}
									]
								},
								{
									"name": "getmaxdate",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select ISNULL(max(@{item().watermark_colmn}),'@{item().rundate}')  as datevalue from ags.@{item().destinationtable}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsformaxtargetdate",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "getmaxdate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ags].[loadstd]",
										"storedProcedureParameters": {
											"destinationtable": {
												"value": {
													"value": "@item().destinationtable",
													"type": "Expression"
												},
												"type": "String"
											},
											"maxdate": {
												"value": {
													"value": "@activity('getmaxdate').output.firstRow.datevalue",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sampledb1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-29T20:00:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_loadstdtec')]",
				"[concat(variables('factoryId'), '/datasets/ds_sample')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_dest')]",
				"[concat(variables('factoryId'), '/datasets/dsformaxtargetdate')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sampledb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_load_using_script')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loadingthedata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT SLNO FROM ',variables('schema'), '.', variables('tablename'), ' WHERE IS_ACTIVE = 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Loadingthedata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Loadingthedata').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT SLNO,\nSOURCE_TABLE,\nDESTINATION_TABLE,\nQUERY,\nLOAD_TYPE\n FROM ADF.LOAD_TABLE WHERE IS_ACTIVE = 1 AND SLNO = '\n, item().slno)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output.firstRow.LOAD_TYPE,'full')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "ls_sqlserver_coviddb",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "@concat('TRUNCATE TABLE ', variables('schema'),'.', activity('Lookup1').output.firstRow.DESTINATION_TABLE)",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								},
								{
									"name": "Script2",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@activity('Lookup1').output.firstRow.QUERY",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"schema": {
						"type": "String",
						"defaultValue": "adf"
					},
					"tablename": {
						"type": "String",
						"defaultValue": "load_table"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T07:24:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlserver_coviddb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select distinct slno from ags.loadstdtec where isactive = 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_loadstdtec",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from ags.loadstdtec where isactive = 1 and slno = @{item().slno}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_loadstdtec",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup2').output.firstRow.loadtype,'full')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "ls_sampledb1",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "truncate table ags.@{activity('Lookup2').output.firstRow.destinationtable}",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@activity('Lookup2').output.firstRow.query",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sample",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sql_dest",
											"type": "DatasetReference",
											"parameters": {
												"tbname": {
													"value": "@activity('Lookup2').output.firstRow.destinationtable",
													"type": "Expression"
												},
												"schema": "ags"
											}
										}
									]
								},
								{
									"name": "getmaxdatefromtarget",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select isnull(max(@{activity('Lookup2').output.firstRow.watermark_colmn}),'@{activity('Lookup2').output.firstRow.rundate}') as maxdate from ags.@{activity('Lookup2').output.firstRow.destinationtable}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_loadstdtec",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "getmaxdatefromtarget",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ags].[loadtypeinc]",
										"storedProcedureParameters": {
											"maxdate": {
												"value": {
													"value": "@activity('getmaxdatefromtarget').output.firstRow.maxdate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"targettable": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.destinationtable",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sampledb1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-30T10:48:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_loadstdtec')]",
				"[concat(variables('factoryId'), '/datasets/ds_sample')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_dest')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sampledb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storedprocedure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading the data isactive",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select slno from ',variables('schema'),'.',variables('tablename'),' WHERE is_active = 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_avf_loadtable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Loading the data isactive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Loading the data isactive').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT SLNO,\nSOURCE_TABLE,\nDESTINATION_TABLE,\nQUERY,\nLOAD_TYPE,\nUPDATE_QUERY\n FROM AVF.LOAD_TABLE WHERE IS_ACTIVE = 1 AND SLNO = '\n, item().slno)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_avf_loadtable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output.firstRow.LOAD_TYPE,'full')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "ls_Avf_sampledb",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "@concat('TRUNCATE TABLE ',variables('schema'),'.',activity('Lookup1').output.firstRow.DESTINATION_TABLE)",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								},
								{
									"name": "Script2",
									"type": "Script",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "ls_Avf_sampledb",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@activity('Lookup1').output.firstRow.UPDATE_QUERY",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Script3",
									"type": "Script",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Script2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "ls_Avf_sampledb",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "UPDATE avf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE} \nSET\n    avf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE}.name_s = avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}.name_s,\n    avf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE}.age = avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}.age,\n    avf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE}.salary = avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}.salary,\n\tavf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE}.pd_date = avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}.pd_date\nFROM\n    avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE} \nWHERE\n     avf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE}.slno = avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}.slno\n    AND avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}.pd_date > avf.@{activity('Lookup1').output.firstRow.DESTINATION_TABLE}.pd_date;",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[avf].[UpsertData]",
										"storedProcedureParameters": {
											"age": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.age",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"batchid": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.batch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"destination_table": {
												"value": {
													"value": "avf.@{activity('Lookup1').output.firstRow.destination_table}",
													"type": "Expression"
												},
												"type": "String"
											},
											"name_s": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.name_s",
													"type": "Expression"
												},
												"type": "String"
											},
											"pdate": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.pd_date",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"salary": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.salary",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"slno": {
												"value": {
													"value": "@activity('Lookup2').output.firstRow.slno",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"source_table": {
												"value": {
													"value": "avf.@{activity('Lookup1').output.firstRow.source_table}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_Avf_sampledb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM avf.@{activity('Lookup1').output.firstRow.SOURCE_TABLE}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sqlserver_avf",
											"type": "DatasetReference",
											"parameters": {
												"stable": {
													"value": "@activity('Lookup1').output.firstRow.SOURCE_TABLE",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"schema": {
						"type": "String",
						"defaultValue": "avf"
					},
					"tablename": {
						"type": "String",
						"defaultValue": "load_table"
					},
					"maxdate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-23T19:16:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_avf_loadtable')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_Avf_sampledb')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqlserver_avf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqlserver_coviddb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "slno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "source_table",
						"type": "varchar"
					},
					{
						"name": "destination_table",
						"type": "varchar"
					},
					{
						"name": "query",
						"type": "varchar"
					},
					{
						"name": "is_active",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "adf",
					"table": "load_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlserver_coviddb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_avf_loadtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Avf_sampledb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "slno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "source_table",
						"type": "varchar"
					},
					{
						"name": "destination_table",
						"type": "varchar"
					},
					{
						"name": "query",
						"type": "varchar"
					},
					{
						"name": "load_type",
						"type": "varchar"
					},
					{
						"name": "is_active",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "avf",
					"table": "load_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Avf_sampledb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_destination_avf_tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ds_avf_destination_tables",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dtable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "avf",
					"table": {
						"value": "@dataset().dtable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ds_avf_destination_tables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_loadstdtec')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sampledb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "slno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sourcetable",
						"type": "nvarchar"
					},
					{
						"name": "destinationtable",
						"type": "nvarchar"
					},
					{
						"name": "loadtype",
						"type": "nvarchar"
					},
					{
						"name": "query",
						"type": "nvarchar"
					},
					{
						"name": "isactive",
						"type": "int",
						"precision": 10
					},
					{
						"name": "watermark_colmn",
						"type": "nvarchar"
					},
					{
						"name": "rundate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "ags",
					"table": "loadstdtec"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sampledb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_maxdate_avf_tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Avf_sampledb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Avf_sampledb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sample')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sampledb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sampledb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sampledb1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tbname": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tbname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sampledb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlserver_avf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_avf",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"stable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "avf",
					"table": {
						"value": "@dataset().stable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_avf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlservermaxdate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqlserver_coviddb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "slno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name_s",
						"type": "nvarchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pd_date",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "adf",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlserver_coviddb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsformaxtargetdate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sampledb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sampledb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GEN2_SOURCE_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_GEN2_SOURCE_EXCEL_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_GEN2_SOURCE_EXCEL_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_avf_destination_tables')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ds_avf_destination_tables_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gen2_newfile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ds_gen2_newfile_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ds_gen2_newfile_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Avf_sampledb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_Avf_sampledb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_avf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_avf_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_dest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_dest_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake_raw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_raw_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_raw_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake_samplefile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_samplefile_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_samplefile_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2_raw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_raw_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_gen2_raw_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2_simplefile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_simplefile_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_gen2_simplefile_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sampledb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sampledb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sampledb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sampledb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqlserver_coviddb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqlserver_coviddb_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}